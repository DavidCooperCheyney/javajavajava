\contentsline {chapter}{\numberline {0}Computers, \unhbox \voidb@x \hbox {Objects}, and Java}{1}
\contentsline {section}{\numberline {0.1}Welcome}{2}
\contentsline {section}{\numberline {0.2}What Is a Computer?}{2}
\contentsline {section}{\numberline {0.3}Networks, the Internet and the World Wide Web}{4}
\contentsline {section}{\numberline {0.4}Why Study Programming?}{6}
\contentsline {section}{\numberline {0.5}Programming Languages}{7}
\contentsline {section}{\numberline {0.6}Why Java?}{9}
\contentsline {section}{\numberline {0.7}What Is \unhbox \voidb@x \hbox {Object-Oriented} Programming?}{11}
\contentsline {subsection}{\numberline {0.7.1}Basic \unhbox \voidb@x \hbox {Object-Oriented} Programming Metaphor: \\Interacting Objects}{11}
\contentsline {subsection}{\numberline {0.7.2}What is an Object?}{11}
\contentsline {subsection}{\numberline {0.7.3}Attributes and Values}{12}
\contentsline {subsection}{\numberline {0.7.4}Actions and Messages}{12}
\contentsline {subsection}{\numberline {0.7.5}What is a Class?}{14}
\contentsline {subsection}{\numberline {0.7.6}Variables and Methods}{14}
\contentsline {subsection}{\numberline {0.7.7}Instance versus Class Variables and Methods}{15}
\contentsline {subsection}{\numberline {0.7.8}Class Hierarchy and Inheritance}{16}
\contentsline {subsection}{\numberline {0.7.9}Principles of \unhbox \voidb@x \hbox {Object-Oriented} Design}{18}
\contentsline {chapter}{\numberline {1}Java Program Design and Development}{23}
\contentsline {section}{\numberline {1.1}Introduction}{24}
\contentsline {section}{\numberline {1.2}Designing Good Programs}{24}
\contentsline {subsection}{\numberline {1.2.1}The Software Engineering Life Cycle}{24}
\contentsline {section}{\numberline {1.3}Designing a Riddle Program}{26}
\contentsline {subsection}{\numberline {1.3.1}Problem Decomposition}{26}
\contentsline {subsection}{\numberline {1.3.2}Object Design}{27}
\contentsline {subsection}{\numberline {1.3.3}Data, Methods, and Algorithms}{29}
\contentsline {subsection}{\numberline {1.3.4}Coding into Java}{30}
\contentsline {subsection}{\numberline {1.3.5}Syntax and Semantics}{31}
\contentsline {subsection}{\numberline {1.3.6}Testing, Debugging, and Revising}{32}
\contentsline {subsection}{\numberline {1.3.7}Writing Readable Programs}{33}
\contentsline {section}{\numberline {1.4}Java Language Elements}{34}
\contentsline {subsection}{\numberline {1.4.1}Comments}{35}
\contentsline {subsection}{\numberline {1.4.2}Program Layout}{36}
\contentsline {subsection}{\numberline {1.4.3}Keywords and Identifiers}{36}
\contentsline {subsection}{\numberline {1.4.4}Data Types and Variables}{37}
\contentsline {subsection}{\numberline {1.4.5}Statements}{38}
\contentsline {subsection}{\numberline {1.4.6}Expressions and Operators}{40}
\contentsline {subsection}{\numberline {1.4.7}Class Definition}{41}
\contentsline {subsection}{\numberline {1.4.8}Declaring an Instance Variable}{42}
\contentsline {subsection}{\numberline {1.4.9}Defining an Instance Method}{43}
\contentsline {subsection}{\numberline {1.4.10}Java Application Programs}{44}
\contentsline {subsection}{\numberline {1.4.11}Creating and Using Objects}{44}
\contentsline {subsection}{\numberline {1.4.12}Java Applets}{45}
\contentsline {subsection}{\numberline {1.4.13}Java Library Packages}{46}
\contentsline {subsection}{\numberline {1.4.14}The {\tt import} Statement}{47}
\contentsline {subsection}{\numberline {1.4.15}Qualified Names in Java}{47}
\contentsline {section}{\numberline {1.5}Editing, Compiling, and Running a Java Program}{49}
\contentsline {subsection}{\numberline {1.5.1}Java Development Environments}{49}
\contentsline {subsection}{\numberline {1.5.2}Editing a Program}{49}
\contentsline {subsection}{\numberline {1.5.3}Compiling a Program}{51}
\contentsline {subsection}{\numberline {1.5.4}Running a Java Application Program}{51}
\contentsline {subsection}{\numberline {1.5.5}Running a Java Applet}{52}
\contentsline {section}{\numberline {1.6}From the Java Library: System and \\PrintStream}{53}
\contentsline {chapter}{\numberline {2}Objects: Using, Creating, and Defining}{63}
\contentsline {section}{\numberline {2.1}Introduction}{64}
\contentsline {section}{\numberline {2.2}Using {\tt String} Objects}{64}
\contentsline {subsection}{\numberline {2.2.1}Creating and Combining Strings}{64}
\contentsline {section}{\numberline {2.3}Drawing Shapes with a {\tt Graphics} Object (Optional)}{68}
\contentsline {subsection}{\numberline {2.3.1}Graphics Drawing Methods}{69}
\contentsline {section}{\numberline {2.4}Class Definition}{72}
\contentsline {subsection}{\numberline {2.4.1}The {\tt Riddle} Class}{72}
\contentsline {subsection}{\numberline {2.4.2}The {\tt RiddleUser} Class}{74}
\contentsline {subsection}{\numberline {2.4.3}Object Instantiation: Creating {\tt Riddle} Instances}{75}
\contentsline {subsection}{\numberline {2.4.4}Interacting with {\tt Riddle}s }{76}
\contentsline {subsection}{\numberline {2.4.5}Define, Create, Use}{76}
\contentsline {section}{\numberline {2.5}CASE STUDY: Simulating a Two-Person Game}{77}
\contentsline {subsection}{\numberline {2.5.1}Designing a OneRowNim class}{77}
\contentsline {subsection}{\numberline {2.5.2}Defining the {\tt OneRowNim} Class}{79}
\contentsline {subsection}{\numberline {2.5.3}Testing the {\tt OneRowNim} Class}{85}
\contentsline {subsection}{\numberline {2.5.4}Flow of Control: Method Call and Return}{87}
\contentsline {subsection}{\numberline {2.5.5}Tracing the {\tt OneRowNim} Program}{87}
\contentsline {subsection}{\numberline {2.5.6}Object-Oriented Design: Basic Principles}{89}
\contentsline {section}{\numberline {2.6}From the Java Library: {\tt java.util.Scanner}.}{91}
\contentsline {subsection}{\numberline {2.6.1}Keyboard Input with the {\tt Scanner} Class}{91}
\contentsline {subsection}{\numberline {2.6.2}Keyboard Input with the {\tt KeyboardReader} Class}{94}
\contentsline {chapter}{\numberline {3}Methods: Communicating with Objects}{101}
\contentsline {section}{\numberline {3.1}Introduction}{102}
\contentsline {section}{\numberline {3.2}Passing Information to an Object}{102}
\contentsline {subsection}{\numberline {3.2.1}Arguments and Parameters}{105}
\contentsline {subsection}{\numberline {3.2.2}Passing an {\tt int} value to a {\tt OneRowNim} method.}{107}
\contentsline {subsection}{\numberline {3.2.3}Passing keyboard input to {\tt takeSticks()}}{108}
\contentsline {section}{\numberline {3.3}Constructor Methods}{110}
\contentsline {subsection}{\numberline {3.3.1}Default Constructors}{112}
\contentsline {subsection}{\numberline {3.3.2}Constructor Overloading and Method Signatures}{112}
\contentsline {subsection}{\numberline {3.3.3}Constructor Invocation}{114}
\contentsline {section}{\numberline {3.4}Retrieving Information from an Object}{115}
\contentsline {subsection}{\numberline {3.4.1}Invoking a Method That Returns a Value}{115}
\contentsline {subsection}{\numberline {3.4.2}An Expanded {\tt OneRowNim} Class}{116}
\contentsline {section}{\numberline {3.5}Passing a Value and Passing a Reference}{118}
\contentsline {section}{\numberline {3.6}Flow of Control: Control Structures}{121}
\contentsline {subsection}{\numberline {3.6.1}The Simple If Statement}{122}
\contentsline {subsection}{\numberline {3.6.2}The {\tt if-else} Statement}{125}
\contentsline {subsection}{\numberline {3.6.3}The Nested if/else Multiway Selection Structure}{125}
\contentsline {subsection}{\numberline {3.6.4}The While Structure}{128}
\contentsline {section}{\numberline {3.7}Testing an Improved {\tt OneRowNim}}{130}
\contentsline {section}{\numberline {3.8}{\bf From the Java Library} {\tt java.lang.Object}}{135}
\contentsline {section}{\numberline {3.9}Object-Oriented Design: Inheritance and Polymorphism}{136}
\contentsline {section}{\numberline {3.10}Drawing Lines and Defining Graphical Methods (Optional)}{138}
\contentsline {chapter}{\numberline {4}Input/Output: Designing the User Interface}{149}
\contentsline {section}{\numberline {4.1}Introduction}{150}
\contentsline {section}{\numberline {4.2}The User Interface}{150}
\contentsline {section}{\numberline {4.3}A Command-Line Interface}{151}
\contentsline {subsection}{\numberline {4.3.1}Using a {\tt BufferedReader} to Input Strings from the Keyboard}{152}
\contentsline {subsection}{\numberline {4.3.2}Inputting Numbers from the Keyboard}{154}
\contentsline {subsection}{\numberline {4.3.3}Designing a Keyboard Reader Class}{155}
\contentsline {subsection}{\numberline {4.3.4}Designing a Command-Line Interface}{158}
\contentsline {section}{\numberline {4.4}A Graphical User Interface (GUI)}{160}
\contentsline {subsection}{\numberline {4.4.1}Java's GUI Components}{161}
\contentsline {subsection}{\numberline {4.4.2}Class Inheritance: Extending a Superclass}{162}
\contentsline {subsection}{\numberline {4.4.3}Top-level Windows}{163}
\contentsline {subsection}{\numberline {4.4.4}GUI Components for Input, Output, and Control}{165}
\contentsline {subsection}{\numberline {4.4.5}Adding GUI Components to a Top-Level Window}{167}
\contentsline {subsection}{\numberline {4.4.6}Controlling the GUI's Action}{169}
\contentsline {subsection}{\numberline {4.4.7}The ActionListener Interface}{171}
\contentsline {subsection}{\numberline {4.4.8}Connecting the GUI to the Computational Object}{174}
\contentsline {subsection}{\numberline {4.4.9}Using the GUI in a Java Application}{176}
\contentsline {subsection}{\numberline {4.4.10}Using the GUI in a Java Applet}{176}
\contentsline {section}{\numberline {4.5}Case Study: The One Row Nim Game }{178}
\contentsline {subsection}{\numberline {4.5.1}A Command-line Interface to {\tt OneRowNim}}{179}
\contentsline {subsection}{\numberline {4.5.2}A GUI for {\tt OneRowNim}}{182}
\contentsline {section}{\numberline {4.6}From the Java Library: {\tt java.io.File} \\ and File Input (Optional)}{185}
\contentsline {subsection}{\numberline {4.6.1}File Input with the {\tt File} and {\tt Scanner} Classes}{186}
\contentsline {chapter}{\numberline {5}Java Data and Operators}{199}
\contentsline {section}{\numberline {5.1}Introduction}{200}
\contentsline {section}{\numberline {5.2}Boolean Data and Operators}{201}
\contentsline {subsection}{\numberline {5.2.1}Boolean (or Logical) Operations}{201}
\contentsline {subsection}{\numberline {5.2.2}Precedence and Associativity}{202}
\contentsline {subsection}{\numberline {5.2.3}Short-Circuit Evaluation}{204}
\contentsline {subsection}{\numberline {5.2.4}Using Booleans in OneRowNim}{206}
\contentsline {section}{\numberline {5.3}Numeric Data and Operators}{208}
\contentsline {subsection}{\numberline {5.3.1}Numeric Operations}{210}
\contentsline {subsection}{\numberline {5.3.2}Operator Precedence}{212}
\contentsline {subsection}{\numberline {5.3.3}Increment and Decrement Operators}{214}
\contentsline {subsection}{\numberline {5.3.4}Assignment Operators}{216}
\contentsline {subsection}{\numberline {5.3.5}Relational Operators}{217}
\contentsline {section}{\numberline {5.4}{\bf From the Java Library} {\tt java.lang.Math}}{219}
\contentsline {section}{\numberline {5.5}Numeric Processing Examples}{220}
\contentsline {subsection}{\numberline {5.5.1}Example: Rounding to Two Decimal Places}{220}
\contentsline {subsection}{\numberline {5.5.2}Example: Converting Fahrenheit to Celsius}{221}
\contentsline {subsection}{\numberline {5.5.3}Example: Using Class Constants}{225}
\contentsline {subsection}{\numberline {5.5.4}OBJECT-ORIENTED DESIGN: \\ Information Hiding}{227}
\contentsline {subsection}{\numberline {5.5.5}Example: A Winning Algorithm for One Row Nim}{229}
\contentsline {section}{\numberline {5.6}{\bf From the Java Library} \\{\tt java.text.NumberFormat}}{232}
\contentsline {section}{\numberline {5.7}Character Data and Operators}{234}
\contentsline {subsection}{\numberline {5.7.1}Character to Integer Conversions}{234}
\contentsline {subsection}{\numberline {5.7.2}Lexical Ordering}{237}
\contentsline {subsection}{\numberline {5.7.3}Relational Operators}{238}
\contentsline {section}{\numberline {5.8}Example: Character Conversions }{238}
\contentsline {section}{\numberline {5.9}Problem Solving = Representation + Action}{241}
\contentsline {chapter}{\numberline {6}Control Structures}{243}
\contentsline {section}{\numberline {6.1}Introduction}{244}
\contentsline {section}{\numberline {6.2}Flow of Control: Repetition Structures}{244}
\contentsline {section}{\numberline {6.3}Counting Loops}{245}
\contentsline {subsection}{\numberline {6.3.1}The For Structure}{247}
\contentsline {subsection}{\numberline {6.3.2}Loop Bounds}{248}
\contentsline {subsection}{\numberline {6.3.3}Infinite Loops}{249}
\contentsline {subsection}{\numberline {6.3.4}Loop Indentation}{250}
\contentsline {subsection}{\numberline {6.3.5}Nested Loops}{253}
\contentsline {section}{\numberline {6.4}Example: Car Loan}{254}
\contentsline {section}{\numberline {6.5}Graphics Example: Drawing a Checkerboard}{257}
\contentsline {section}{\numberline {6.6}Conditional Loops}{261}
\contentsline {subsection}{\numberline {6.6.1}The While Structure, Revisited}{262}
\contentsline {subsection}{\numberline {6.6.2}The \unhbox \voidb@x \hbox {Do-While} Structure}{264}
\contentsline {section}{\numberline {6.7}Example: Computing Averages}{268}
\contentsline {section}{\numberline {6.8}Example: Data Validation}{272}
\contentsline {section}{\numberline {6.9}Principles of Loop Design}{272}
\contentsline {section}{\numberline {6.10}The {\tt switch} Multiway Selection Structure}{275}
\contentsline {section}{\numberline {6.11}OBJECT-ORIENTED DESIGN: \\Structured Programming}{279}
\contentsline {chapter}{\numberline {7}Strings and String Processing}{299}
\contentsline {section}{\numberline {7.1}Introduction}{300}
\contentsline {section}{\numberline {7.2}String Basics}{300}
\contentsline {subsection}{\numberline {7.2.1}Constructing Strings}{301}
\contentsline {subsection}{\numberline {7.2.2}Concatenating Strings }{303}
\contentsline {subsection}{\numberline {7.2.3}Indexing {\tt String}s }{304}
\contentsline {subsection}{\numberline {7.2.4}Converting Data to Strings}{305}
\contentsline {section}{\numberline {7.3}Finding Things Within a String}{306}
\contentsline {section}{\numberline {7.4}Example: Keyword Search}{308}
\contentsline {section}{\numberline {7.5}From the Java Library: java.lang.StringBuffer}{310}
\contentsline {section}{\numberline {7.6}Retrieving Parts of Strings}{312}
\contentsline {section}{\numberline {7.7}Example: Processing Names and Passwords}{315}
\contentsline {section}{\numberline {7.8}Processing Each Character in a {\tt String}}{316}
\contentsline {subsection}{\numberline {7.8.1}Off-by-One Error}{317}
\contentsline {subsection}{\numberline {7.8.2}Example: Counting Characters}{317}
\contentsline {subsection}{\numberline {7.8.3}Example: Reversing a String}{318}
\contentsline {subsection}{\numberline {7.8.4}Example: Capitalizing the First Letter }{318}
\contentsline {subsection}{\numberline {7.8.5}Miscellaneous {\tt String} Methods}{319}
\contentsline {section}{\numberline {7.9}Comparing Strings}{320}
\contentsline {subsection}{\numberline {7.9.1}Object Identity Versus Object Equality}{322}
\contentsline {subsection}{\numberline {7.9.2}String Identity Versus String Equality}{324}
\contentsline {section}{\numberline {7.10}From the Java Library: \\java.util.StringTokenizer}{326}
\contentsline {section}{\numberline {7.11}Handling Text in a Graphics Context \\(Optional)}{327}
\contentsline {subsection}{\numberline {7.11.1}The {\tt Font} and {\tt FontMetrics} Classes}{328}
\contentsline {subsection}{\numberline {7.11.2}Font Metrics}{329}
\contentsline {subsection}{\numberline {7.11.3}Example: Centering a Line of Text}{330}
\contentsline {chapter}{\numberline {8}Inheritance and Polymorphism}{339}
\contentsline {section}{\numberline {8.1}Introduction}{340}
\contentsline {section}{\numberline {8.2}Java's Inheritance Mechanism}{340}
\contentsline {subsection}{\numberline {8.2.1}Using an Inherited Method}{341}
\contentsline {subsection}{\numberline {8.2.2}Overriding an Inherited Method}{342}
\contentsline {subsection}{\numberline {8.2.3}Static Binding, Dynamic Binding \\and Polymorphism}{343}
\contentsline {subsection}{\numberline {8.2.4}Polymorphism and Object-Oriented Design}{345}
\contentsline {subsection}{\numberline {8.2.5}Using {\tt super} to Refer to the Superclass}{346}
\contentsline {subsection}{\numberline {8.2.6}Inheritance and Constructors}{347}
\contentsline {section}{\numberline {8.3}Abstract Classes, Interfaces, \\ and Polymorphism}{349}
\contentsline {subsection}{\numberline {8.3.1}Implementing an Abstract Method}{350}
\contentsline {subsection}{\numberline {8.3.2}Implementing a Java Interface}{353}
\contentsline {section}{\numberline {8.4}Example: A Toggle Button}{355}
\contentsline {section}{\numberline {8.5}Example: The Cipher Class Hierarchy}{359}
\contentsline {subsection}{\numberline {8.5.1}Class Design: {\tt Caesar} }{361}
\contentsline {subsection}{\numberline {8.5.2}Algorithm Design: Shifting Characters}{362}
\contentsline {subsection}{\numberline {8.5.3}Class Design: {\tt Transpose} }{364}
\contentsline {subsection}{\numberline {8.5.4}Testing and Debugging}{364}
\contentsline {section}{\numberline {8.6}Case Study: A Two Player Game Hierarchy}{365}
\contentsline {subsection}{\numberline {8.6.1}Design Goals}{366}
\contentsline {subsection}{\numberline {8.6.2}Designing the {\tt TwoPlayerGame} Class}{366}
\contentsline {subsection}{\numberline {8.6.3}The {\tt TwoPlayerGame} Superclass}{367}
\contentsline {subsection}{\numberline {8.6.4}The {\tt CLUIPlayableGame} Interface}{371}
\contentsline {subsection}{\numberline {8.6.5}Object Oriented Design: Interfaces or Abstract Classes}{374}
\contentsline {subsection}{\numberline {8.6.6}The Revised {\tt OneRowNim} Class}{375}
\contentsline {subsection}{\numberline {8.6.7}The {\tt IPlayer} Interface}{378}
\contentsline {subsection}{\numberline {8.6.8}Playing {\tt OneRowNim}}{380}
\contentsline {subsection}{\numberline {8.6.9}Extending the {\tt TwoPlayerGame} Hierarchy}{381}
\contentsline {section}{\numberline {8.7}Principles Of Object-Oriented Design}{386}
\contentsline {chapter}{\numberline {9}Arrays and Array Processing}{395}
\contentsline {section}{\numberline {9.1}Introduction}{396}
\contentsline {section}{\numberline {9.2}One-Dimensional Arrays}{396}
\contentsline {subsection}{\numberline {9.2.1}Declaring and Creating Arrays}{398}
\contentsline {subsection}{\numberline {9.2.2}Array Allocation}{399}
\contentsline {subsection}{\numberline {9.2.3}Initializing Arrays}{402}
\contentsline {subsection}{\numberline {9.2.4}Assigning and Using Array Values}{402}
\contentsline {section}{\numberline {9.3}Simple Array Examples}{403}
\contentsline {section}{\numberline {9.4}Example: Counting Frequencies of Letters}{406}
\contentsline {subsection}{\numberline {9.4.1}A Class to Store the Frequency of One Letter}{406}
\contentsline {subsection}{\numberline {9.4.2}A Class to Count Letter Frequencies}{407}
\contentsline {section}{\numberline {9.5}Array Algorithms: Sorting}{410}
\contentsline {subsection}{\numberline {9.5.1}Insertion Sort}{410}
\contentsline {subsection}{\numberline {9.5.2}Selection Sort}{413}
\contentsline {subsection}{\numberline {9.5.3}Algorithm: Swapping Memory Elements}{414}
\contentsline {subsection}{\numberline {9.5.4}Passing a Value and Passing a Reference}{415}
\contentsline {section}{\numberline {9.6}Array Algorithms: Searching}{417}
\contentsline {subsection}{\numberline {9.6.1}Sequential Search}{417}
\contentsline {subsection}{\numberline {9.6.2}Binary Search}{419}
\contentsline {section}{\numberline {9.7}Two-Dimensional Arrays}{421}
\contentsline {subsection}{\numberline {9.7.1}Two-Dimensional Array Methods}{424}
\contentsline {subsection}{\numberline {9.7.2}Passing Part of an Array to a Method}{426}
\contentsline {section}{\numberline {9.8}Multidimensional Arrays (Optional)}{429}
\contentsline {subsection}{\numberline {9.8.1}Array Initializers}{431}
\contentsline {section}{\numberline {9.9}OBJECT-ORIENTED DESIGN: \\[2pt]Polymorphic Sorting (Optional)}{431}
\contentsline {subsection}{\numberline {9.9.1}The {\tt java.util.Arrays.sort()} Method}{434}
\contentsline {section}{\numberline {9.10}From the Java Library: java.util.Vector}{434}
\contentsline {section}{\numberline {9.11}Case Study: An N-Player Computer Game}{436}
\contentsline {subsection}{\numberline {9.11.1}The {\tt ComputerGame} Hierarchy}{436}
\contentsline {subsection}{\numberline {9.11.2}The {\tt ComputerGame} Class}{437}
\contentsline {subsection}{\numberline {9.11.3}The {\tt WordGuess} and {\tt WordGuesser} Classes}{440}
\contentsline {section}{\numberline {9.12}A GUI-Based Game (Optional Graphics)}{443}
\contentsline {subsection}{\numberline {9.12.1}The {\tt GUIPlayableGame} Interface}{444}
\contentsline {subsection}{\numberline {9.12.2}The {\tt SlidingTilePuzzle}}{445}
\contentsline {subsection}{\numberline {9.12.3}The {\tt SlidingGUI} Class}{447}
\contentsline {chapter}{\numberline {10}Exceptions: When Things Go Wrong}{461}
\contentsline {section}{\numberline {10.1}Introduction}{462}
\contentsline {section}{\numberline {10.2}Handling Exceptional Conditions}{462}
\contentsline {subsection}{\numberline {10.2.1}Traditional Error Handling}{463}
\contentsline {subsection}{\numberline {10.2.2}Java's Default Exception Handling}{464}
\contentsline {section}{\numberline {10.3}Java's Exception Hierarchy}{464}
\contentsline {subsection}{\numberline {10.3.1}Checked and Unchecked Exceptions}{466}
\contentsline {subsection}{\numberline {10.3.2}The {\tt Exception} Class}{468}
\contentsline {section}{\numberline {10.4}Handling Exceptions Within a Program}{468}
\contentsline {subsection}{\numberline {10.4.1}Trying, Throwing, and Catching an Exception}{468}
\contentsline {subsection}{\numberline {10.4.2}Separating Error Checking from Error Handling}{471}
\contentsline {subsection}{\numberline {10.4.3}Syntax and Semantics of Try/Throw/Catch}{472}
\contentsline {subsection}{\numberline {10.4.4}Restrictions on the {\tt try/catch/finally} \\Statement}{474}
\contentsline {subsection}{\numberline {10.4.5}Dynamic Versus Static Scoping}{475}
\contentsline {subsection}{\numberline {10.4.6}Exception Propagation: Searching for a Catch Block}{476}
\contentsline {section}{\numberline {10.5}Error Handling and Robust \\Program Design}{479}
\contentsline {subsection}{\numberline {10.5.1}Print a Message and Terminate}{480}
\contentsline {subsection}{\numberline {10.5.2}Log the Error and Resume}{481}
\contentsline {subsection}{\numberline {10.5.3}Fix the Error and Resume}{482}
\contentsline {subsection}{\numberline {10.5.4}To Fix or Not to Fix}{485}
\contentsline {section}{\numberline {10.6}Creating and Throwing Your Own \\ Exceptions}{489}
\contentsline {section}{\numberline {10.7}From the Java Library: {\tt JOptionPane}}{491}
\contentsline {chapter}{\numberline {11}Files and Streams: Input/Output Techniques}{503}
\contentsline {section}{\numberline {11.1}Introduction}{504}
\contentsline {section}{\numberline {11.2}Streams and Files}{504}
\contentsline {subsection}{\numberline {11.2.1}The Data Hierarchy}{505}
\contentsline {subsection}{\numberline {11.2.2}Binary Files and Text Files}{505}
\contentsline {subsection}{\numberline {11.2.3}Input and Output Streams}{506}
\contentsline {section}{\numberline {11.3}CASE STUDY: Reading and Writing Text Files}{509}
\contentsline {subsection}{\numberline {11.3.1}Text File Format}{510}
\contentsline {subsection}{\numberline {11.3.2}Writing to a Text File}{510}
\contentsline {subsection}{\numberline {11.3.3}Code Reuse: Designing Text File Output}{513}
\contentsline {subsection}{\numberline {11.3.4}Reading from a Text File}{514}
\contentsline {subsection}{\numberline {11.3.5}Code Reuse: Designing Text File Input}{518}
\contentsline {subsection}{\numberline {11.3.6}The {\tt TextIO} Application}{520}
\contentsline {section}{\numberline {11.4}The {\tt File} Class}{522}
\contentsline {subsection}{\numberline {11.4.1}Names and Paths}{522}
\contentsline {subsection}{\numberline {11.4.2}Validating File Names}{523}
\contentsline {section}{\numberline {11.5}Example: Reading and Writing Binary Files}{525}
\contentsline {subsection}{\numberline {11.5.1}Writing Binary Data}{525}
\contentsline {subsection}{\numberline {11.5.2}Reading Binary Data}{528}
\contentsline {subsection}{\numberline {11.5.3}The {\tt BinaryIO} Application}{531}
\contentsline {subsection}{\numberline {11.5.4}Abstracting Data from Files}{531}
\contentsline {section}{\numberline {11.6}Object Serialization: Reading and Writing Objects}{534}
\contentsline {subsection}{\numberline {11.6.1}The {\tt ObjectIO} Class}{536}
\contentsline {section}{\numberline {11.7}From the Java Library \\ {\tt javax.swing.JFileChooser}}{539}
\contentsline {section}{\numberline {11.8}Using File Data in Programs}{540}
\contentsline {chapter}{\numberline {12}Recursive Problem Solving}{549}
\contentsline {section}{\numberline {12.1}Introduction}{550}
\contentsline {subsection}{\numberline {12.1.1}Recursion as Repetition}{550}
\contentsline {subsection}{\numberline {12.1.2}Recursion as a Problem-Solving Approach}{552}
\contentsline {section}{\numberline {12.2}Recursive Definition}{553}
\contentsline {subsection}{\numberline {12.2.1}Factorial: {\it N}!}{553}
\contentsline {subsection}{\numberline {12.2.2}Drawing a Nested Pattern}{554}
\contentsline {section}{\numberline {12.3}Recursive String Methods}{555}
\contentsline {subsection}{\numberline {12.3.1}Printing a String}{556}
\contentsline {subsection}{\numberline {12.3.2}Printing the String Backward}{559}
\contentsline {subsection}{\numberline {12.3.3}Counting Characters in a String}{561}
\contentsline {subsection}{\numberline {12.3.4}Translating a String}{563}
\contentsline {subsection}{\numberline {12.3.5}Printing all Possible Outcomes when Tossing N Coins}{564}
\contentsline {section}{\numberline {12.4}Recursive Array Processing}{567}
\contentsline {subsection}{\numberline {12.4.1}Recursive Sequential Search}{567}
\contentsline {subsection}{\numberline {12.4.2}Information Hiding}{569}
\contentsline {subsection}{\numberline {12.4.3}Recursive Selection Sort}{571}
\contentsline {section}{\numberline {12.5}Example: Drawing (Recursive) Fractals}{573}
\contentsline {subsection}{\numberline {12.5.1}Nested Squares}{573}
\contentsline {subsection}{\numberline {12.5.2}The Sierpinski Gasket}{575}
\contentsline {section}{\numberline {12.6}OBJECT-ORIENTED DESIGN:\\ Tail Recursion}{577}
\contentsline {section}{\numberline {12.7}OBJECT-ORIENTED DESIGN: \\Recursion or Iteration?}{578}
\contentsline {section}{\numberline {12.8}From the Java Library: \\ javax.swing.JComboBox}{581}
\contentsline {subsection}{\numberline {12.8.1}A {\tt JComboBox} Example}{581}
\contentsline {chapter}{\numberline {13}Graphical User Interfaces}{593}
\contentsline {section}{\numberline {13.1}Introduction}{594}
\contentsline {section}{\numberline {13.2}Java GUIs: From AWT to Swing}{594}
\contentsline {subsection}{\numberline {13.2.1}Heavyweight Versus Lightweight Components}{595}
\contentsline {section}{\numberline {13.3}The Swing Component Set}{597}
\contentsline {section}{\numberline {13.4}OBJECT-ORIENTED DESIGN: \\Model-View-Controller Architecture}{598}
\contentsline {subsection}{\numberline {13.4.1}Pluggable Look and Feel}{599}
\contentsline {section}{\numberline {13.5}The Java Event Model}{600}
\contentsline {subsection}{\numberline {13.5.1}Event Classes}{602}
\contentsline {section}{\numberline {13.6}CASE STUDY: Designing a Basic GUI}{604}
\contentsline {subsection}{\numberline {13.6.1}The Metric Converter Application}{605}
\contentsline {subsection}{\numberline {13.6.2}Inner Classes and Adapter Classes}{609}
\contentsline {subsection}{\numberline {13.6.3}GUI Design Critique}{611}
\contentsline {subsection}{\numberline {13.6.4}Extending the Basic GUI: Button Array}{612}
\contentsline {subsection}{\numberline {13.6.5}GUI Design Critique}{616}
\contentsline {section}{\numberline {13.7}Containers and Layout Managers}{616}
\contentsline {subsection}{\numberline {13.7.1}Layout Managers}{618}
\contentsline {subsection}{\numberline {13.7.2}The {\tt GridLayout} Manager}{619}
\contentsline {subsection}{\numberline {13.7.3}GUI Design Critique}{620}
\contentsline {subsection}{\numberline {13.7.4}The {\tt BorderLayout} Manager}{620}
\contentsline {section}{\numberline {13.8}Checkboxes, Radio Buttons, and Borders}{622}
\contentsline {subsection}{\numberline {13.8.1}Checkbox and Radio Button Arrays}{624}
\contentsline {subsection}{\numberline {13.8.2}Swing Borders}{625}
\contentsline {subsection}{\numberline {13.8.3}The {\tt BoxLayout} Manager}{626}
\contentsline {subsection}{\numberline {13.8.4}The {\tt ItemListener} Interface }{627}
\contentsline {subsection}{\numberline {13.8.5}The {\tt OrderApplet} }{628}
\contentsline {section}{\numberline {13.9}Menus and Scroll Panes}{631}
\contentsline {subsection}{\numberline {13.9.1}Adding a Menu Bar to an Application}{631}
\contentsline {subsection}{\numberline {13.9.2}Menu Hierarchies}{633}
\contentsline {subsection}{\numberline {13.9.3}Handling Menu Actions}{634}
\contentsline {subsection}{\numberline {13.9.4}Adding Scrollbars to a Text Area}{635}
\contentsline {chapter}{\numberline {14}Threads and Concurrent Programming}{645}
\contentsline {section}{\numberline {14.1}Introduction}{646}
\contentsline {section}{\numberline {14.2}What Is a Thread?}{646}
\contentsline {subsection}{\numberline {14.2.1}Concurrent Execution of Threads}{647}
\contentsline {subsection}{\numberline {14.2.2}Multithreaded Numbers}{648}
\contentsline {section}{\numberline {14.3}From the Java Library: {\tt java.lang.Thread}}{650}
\contentsline {subsection}{\numberline {14.3.1}Thread Control}{652}
\contentsline {subsection}{\numberline {14.3.2}Thread Priority}{652}
\contentsline {subsection}{\numberline {14.3.3}Forcing Threads to Sleep}{654}
\contentsline {subsection}{\numberline {14.3.4}The Asynchronous Nature of Threaded Programs}{655}
\contentsline {section}{\numberline {14.4}Thread States and Life Cycle}{656}
\contentsline {section}{\numberline {14.5}Using Threads to Improve \\\hspace *{2.8pc}Interface Responsiveness}{658}
\contentsline {subsection}{\numberline {14.5.1}Single-Threaded Design}{658}
\contentsline {subsection}{\numberline {14.5.2}Multithreaded Drawing: The {\tt Dotty} Thread}{662}
\contentsline {subsection}{\numberline {14.5.3}Advantages of Multithreaded Design}{665}
\contentsline {section}{\numberline {14.6}CASE STUDY: Cooperating Threads}{666}
\contentsline {subsection}{\numberline {14.6.1}Problem Statement}{667}
\contentsline {subsection}{\numberline {14.6.2}Design: The {\tt TakeANumber} Class}{668}
\contentsline {subsection}{\numberline {14.6.3}Java Monitors and Mutual Exclusion}{669}
\contentsline {subsection}{\numberline {14.6.4}The {\tt Customer} Class}{670}
\contentsline {subsection}{\numberline {14.6.5}The {\tt Clerk} Class}{671}
\contentsline {subsection}{\numberline {14.6.6}The {\tt Bakery} Class}{672}
\contentsline {subsection}{\numberline {14.6.7}Problem: Critical Sections}{674}
\contentsline {subsection}{\numberline {14.6.8}Using {\tt wait/notify} to Coordinate Threads}{678}
\contentsline {section}{\numberline {14.7}CASE STUDY: The Game of Pong}{683}
\contentsline {subsection}{\numberline {14.7.1}A Multithreaded Design}{683}
\contentsline {subsection}{\numberline {14.7.2}Implementation of the Pong Program}{684}
\contentsline {subsection}{\numberline {14.7.3}The {\tt KeyListener} Interface}{686}
\contentsline {subsection}{\numberline {14.7.4}Animating the Bouncing Ball}{689}
\contentsline {chapter}{\numberline {15}Sockets and Networking}{697}
\contentsline {section}{\numberline {15.1}Introduction}{698}
\contentsline {section}{\numberline {15.2}An Overview of Networks}{698}
\contentsline {subsection}{\numberline {15.2.1}Network Size and Topology}{698}
\contentsline {subsection}{\numberline {15.2.2}Internets}{699}
\contentsline {subsection}{\numberline {15.2.3}Network Protocols}{700}
\contentsline {subsection}{\numberline {15.2.4}Client/Server Applications}{701}
\contentsline {subsection}{\numberline {15.2.5}Lower Level Network Protocols}{702}
\contentsline {subsection}{\numberline {15.2.6}The {\tt java.net} Package}{703}
\contentsline {section}{\numberline {15.3}Using Network Resources from an Applet}{704}
\contentsline {section}{\numberline {15.4}From the Java Library: {\tt java.net.URL}}{705}
\contentsline {subsection}{\numberline {15.4.1}Code Reuse: The {\tt java.applet.Applet} Class}{706}
\contentsline {section}{\numberline {15.5}The Slide Show Applet}{707}
\contentsline {subsection}{\numberline {15.5.1}The {\tt SlideShowApplet} class}{708}
\contentsline {subsection}{\numberline {15.5.2}The {\tt Timer} Class}{711}
\contentsline {section}{\numberline {15.6}Using Network Resources from an \\Application}{712}
\contentsline {subsection}{\numberline {15.6.1}Downloading a Text File from the Web}{712}
\contentsline {subsection}{\numberline {15.6.2}Reusing Code}{722}
\contentsline {section}{\numberline {15.7}Client/Server Communication via {\tt Socket}s}{722}
\contentsline {subsection}{\numberline {15.7.1}The Server Protocol}{723}
\contentsline {subsection}{\numberline {15.7.2}The Client Protocol}{724}
\contentsline {subsection}{\numberline {15.7.3}A Two-Way Stream Connection}{725}
\contentsline {section}{\numberline {15.8}CASE STUDY: Generic Client/Server Classes}{727}
\contentsline {subsection}{\numberline {15.8.1}Object-Oriented Design}{728}
\contentsline {subsection}{\numberline {15.8.2}The {\tt EchoServer} Class}{730}
\contentsline {subsection}{\numberline {15.8.3}The {\tt EchoClient} Class}{733}
\contentsline {section}{\numberline {15.9}Playing One Row Nim Over the Network}{737}
\contentsline {subsection}{\numberline {15.9.1}The {\tt NimServer} Class}{738}
\contentsline {subsection}{\numberline {15.9.2}The {\tt NimClient} Class}{742}
\contentsline {subsection}{\numberline {15.9.3}Testing the Nim Service}{743}
\contentsline {section}{\numberline {15.10}Java Network Security Restrictions}{744}
\contentsline {section}{\numberline {15.11}Java Servlets and Java Server Pages}{745}
\contentsline {subsection}{\numberline {15.11.1}Java Server Pages}{746}
\contentsline {subsection}{\numberline {15.11.2}Java Servlets}{747}
\contentsline {subsection}{\numberline {15.11.3}A Simple Servlet Example}{748}
\contentsline {subsection}{\numberline {15.11.4}The Nim Servlet}{750}
\contentsline {subsection}{\numberline {15.11.5}Setting Up and Using Java Servlets}{754}
\contentsline {chapter}{\numberline {16}Data Structures: Lists, Stacks, and Queues}{759}
\contentsline {section}{\numberline {16.1}Introduction}{760}
\contentsline {section}{\numberline {16.2}The Linked List Data Structure}{760}
\contentsline {subsection}{\numberline {16.2.1}Using References to Link Objects}{760}
\contentsline {subsection}{\numberline {16.2.2}Example: The Dynamic Phone List}{762}
\contentsline {subsection}{\numberline {16.2.3}Manipulating the Phone List}{765}
\contentsline {section}{\numberline {16.3}OBJECT-ORIENTED DESIGN: \\The List Abstract Data Type (ADT)}{772}
\contentsline {section}{\numberline {16.4}The Stack ADT}{778}
\contentsline {subsection}{\numberline {16.4.1}The {\tt Stack} Class}{779}
\contentsline {subsection}{\numberline {16.4.2}Testing the {\tt Stack} Class}{780}
\contentsline {section}{\numberline {16.5}The {Queue} ADT}{780}
\contentsline {subsection}{\numberline {16.5.1}The {\tt Queue} Class}{782}
\contentsline {section}{\numberline {16.6}From the Java Library: The Java Collections Framework and Generic Types}{784}
\contentsline {subsection}{\numberline {16.6.1}Generic types in Java}{784}
\contentsline {subsection}{\numberline {16.6.2}The {\tt List<E>} interface \\and the {\tt LinkedList<E>} class}{786}
\contentsline {section}{\numberline {16.7} Using the {\tt Set} and {\tt Map} Interfaces}{787}
\contentsline {subsection}{\numberline {16.7.1}Using the {\tt Set} Interface.}{788}
\contentsline {subsection}{\numberline {16.7.2}Using the {\tt Map<K,V>} Interface.}{790}
\contentsline {section}{\numberline {16.8} The Binary Search Tree Data Structure}{791}
\contentsline {chapter}{\numberline {A}Coding Conventions}{803}
\contentsline {chapter}{\numberline {B}The Java Development Kit}{811}
\contentsline {chapter}{\numberline {C}The ASCII and Unicode Character Sets}{821}
\contentsline {chapter}{\numberline {D}Java Keywords}{823}
\contentsline {chapter}{\numberline {E}Operator Precedence Hierarchy}{825}
\contentsline {chapter}{\numberline {F}Java Inner Classes}{827}
\contentsline {chapter}{\numberline {G}Java Autoboxing and Enumeration}{833}
\contentsline {chapter}{\numberline {H}Java and UML Resources}{839}
